ImageList = importdata('./datasets/CUB_200_2011/list_images.txt');

rcnn_model = rcnn_create_model('./model-defs/rcnn_batch_256_output_pool5.prototxt', 'finetune_ilsvrc13_val1+train1k_iter_50000');
rcnn_model = rcnn_load_model(rcnn_model);
rcnn_model.detectors.crop_mode = 'wrap';
rcnn_model.detectors.crop_padding = 16;

timestamp = datestr(datevec(now()), 'dd.mmm.yyyy:HH.MM.SS');
diary_file = ['./Logs/SiftFlow_cache_pool5_features_' num2str(iter*2500) '_' timestamp '.txt'];
diary(diary_file); fprintf('Logging output in %s\n', diary_file);
fprintf('\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n');

%Extract CNN_pool_features for CUB_200_2011
for i = 1:11788
  fprintf('Extract Features: #%d\n', i);
  im = imread(['./datasets/CUB_200_2011/images/' ImageList{i}]);
  X(i,:) = rcnn_features(im, boxes, rcnn_model);
end
%Load CNN features and class labels
[N D] =size(X); Y = importdata('./datasets/CUB_200_2011/list_image_class_labels.txt');
%Split train and test datasets
split = importdata('./datasets/CUB_200_2011/list_train_test_split.txt');

X_trn = []; 
Y_trn = [];
N_trn = 0; 
X_tst = []; 
Y_tst = []; 
N_tst = 0;

for i=1:11788
  if split(i,:) == 1
    N_trn = N_trn + 1;
    X_trn(N_trn,:) = X(i,:);
    Y_trn(N_trn,:) = Y(i,:);
  else
    N_tst = N_tst + 1;
    X_tst(N_tst,:) = X(i,:);
    Y_tst(N_tst,:) = Y(i,:);
  end
end

%Train and test LibLinearSVM
model = train(Y_trn,sparse(X_trn));
[Y_hat,accuracy, votes]=predict(Y_tst,sparse(X_tst),model);

%Calculate mAP
Check=votes; Check(:,201)=Y_hat; Check(:,202)=Y_tst; AP=[];
for class=1:200
  tot = 0;
  ok = 0.0;
  Check = sortrows(Check,-class);
  for i=1:N_tst
    if Check(i,202) == class
       tot = tot + 1;
       ok = ok + tot/i;
    end
  end
    AP(class) = ok/tot;
end
fprintf('\nmAP %f\n', mean(AP));
fprintf('\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n');
end
